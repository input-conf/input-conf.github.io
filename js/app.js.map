{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app.js","webpack:////Users/apple/Documents/Input-site/node_modules/lottie-web/build/player/lottie.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","bodymovin","loadAnimation","container","document","getElementById","renderer","loop","autoplay","animationData","logoAnimation","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","navigator","window","svgNS","locationHref","initialDefaultFrame","subframeEnabled","expressionsPlugin","isSafari","test","userAgent","cachedColors","bm_rounder","Math","round","bm_rnd","bm_pow","pow","bm_sqrt","sqrt","bm_abs","abs","bm_floor","floor","bm_max","max","bm_min","min","blitter","BMMath","ProjectInterface","propertyNames","len","length","random","val","absArr","createSizedArray","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","this","type","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","createElementID","_count","HSVtoRGB","h","v","g","b","q","RGBtoHSV","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","BaseEvent","triggerEvent","eventName","args","_cbs","addEventListener","callback","push","removeEventListener","splice","createTypedArray","Uint8ClampedArray","Float32Array","Int16Array","arr","Array","apply","createNS","createElementNS","createTag","createElement","DynamicPropertyContainer","addDynamicProperty","prop","dynamicProperties","indexOf","_isAnimated","iterateDynamicProperties","_mdf","getValue","initDynamicPropertyContainer","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","Matrix","_cos","cos","_sin","sin","_tan","tan","_rnd","reset","props","rotate","angle","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","skewFromAxis","scale","sz","setTransform","a","e","j","k","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","pool","math","nodecrypto","global","width","chunks","rngname","startdenom","significance","overflow","mask","ARC4","keylen","me","S","count","copy","slice","mixkey","seed","smear","stringseed","charCodeAt","tostring","String","fromCharCode","options","shortseed","flatten","obj","depth","result","typ","entropy","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","autoseed","arc4","prng","int32","quick","double","pass","is_math_call","state","BezierFactory","ob","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","NEWTON_ITERATIONS","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_mSampleValues","_precomputed","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","lastSample","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","extendPrototype","sources","destination","sourcePrototype","attr","getDescriptor","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","bezier_length_pool","newElement","percents","lengths","BezierData","segmentLength","PointData","partial","partialLength","storedData","buildBezierData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","bezier_segment_points","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","closed","pathV","pathO","pathI","_length","totalLength","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","getPointInSegment","percent","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","dataFunctionManager","findCompLayers","comps","layers","__used","JSON","parse","stringify","completeShapes","jLen","ks","convertPathsToAbsoluteValues","it","path","checkVersion","minimum","animVersionString","animVersion","split","minimumVersion","checkText","iterateLayers","textLayer","documentData","assets","checkChars","chars","pathData","paths","data","shapes","__converted","checkColors","iterateShapes","checkShapes","layerData","kLen","hasMask","maskProps","masksProperties","cl","moduleOb","completeData","fontManager","__complete","completeLayers","completed","tt","td","refId","singleShape","dataManager","FontManager","maxWaitingTime","emptyChar","w","size","combinedCharacters","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","parent","createHelper","def","fontData","tHelper","setAttribute","fFamily","fStyle","fWeight","textContent","fClass","getContext","concat","Font","fonts","typekitLoaded","isLoaded","initTime","now","getCombinedCharacterCodes","addChars","found","ch","addFonts","defs","list","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","loaded","monoCase","sansCase","fPath","fOrigin","origin","querySelectorAll","href","rel","src","sc","helper","cache","checkLoadedFonts","getCharData","char","console","warn","getFontByName","fName","measureText","fontName","index","doubleSize","getComputedTextLength","singleSize","loadedCount","removeChild","PropertyFactory","initFrame","math_abs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","keyData","nextKeyData","fnc","iterationIndex","lastIndex","keyframes","endValue","quat","qx","qy","qz","qw","heading","attitude","bank","nextKeyTime","keyTime","to","ti","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quatStart","createQuaternion","quatEnd","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","slerp","atan2","asin","constructor","values","c3","s1","s2","s3","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","elem","globalData","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","getProp","TransformPropertyFactory","TransformProperty","pre","appliedTransformations","px","py","pz","rx","ry","rz","or","sk","sa","_isDirty","applyToMatrix","mat","forceRender","precalculateMatrix","autoOriented","v1","v2","frameRate","getValueAtTime","autoOrient","_addDynamicProperty","getTransformProperty","ShapePath","_maxLength","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shape1","shape2","shapesEqual","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","EllShapeProperty","cPoint","convertEllToPath","s0","_cw","_v","StarShapeProperty","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","convertRectToPath","v0","getShapeProp","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","dataProps","dashStr","dashArray","dashoffset","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","initModifierProperties","addShapeToModifier","shape","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","shapePaths","_s","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","op","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","proxyImage","canvas","height","ctx","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","createImageData","assetData","assetsPath","original_path","imagePath","u","getAssetsPath","img","crossOrigin","_imageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getImage","destroy","featureSupport","maskType","filtersFactory","createFilter","filId","fil","createAlphaToLuminanceFilter","feColorMatrix","assetLoader","formatResponse","xhr","response","responseText","load","errorCallback","XMLHttpRequest","open","responseType","send","onreadystatechange","readyState","status","err","TextAnimatorProperty","textData","renderType","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","textAnimator_animatables","sw","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","of","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","charCode","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","undefined","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","cloned","shapeCollection","BaseRenderer","SVGRenderer","animationItem","config","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","context","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","filterID","expan","lastPath","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","caches","lStr","SVGTransformData","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","getAssetData","imageLoader","imagePreloader","fr","compSize","NullElement","SVGShapeElement","SVGTextElement","IImageElement","SVGCompElement","ISolidElement","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","CVShapeElement","CVTextElement","CVImageElement","CVCompElement","CVSolidElement","ctxTransform","cProps","cTr","trProps","canvasContext","ctxOpacity","globalAlpha","cO","restore","save","actionFlag","cArrPos","duplicate","saved","savedOp","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","substr","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","getThreeDContainerByPos","HShapeElement","HTextElement","HCameraElement","HImageElement","HCompElement","HSolidElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","initHierarchy","_isParent","prepareProperties","isVisible","initTransform","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","component","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initElement","initBaseData","initRendererElement","createContainerElements","createRenderableComponents","createContent","baseElement","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","stop","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","_identityMatrix","_matrixHelper","renderContentTransform","styleData","itemData","renderPath","pathStringTransformed","redraw","iterations","lLen","renderFill","styleElem","renderGradientStroke","renderGradient","renderStroke","hasOpacity","attr1","attr2","cValues","oValues","ang","dist","createRenderFunction","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","BaseElement","SVGBaseElement","IShapeElement","ITextElement","ICompElement","sourceRect","tm","_placeholder","textSpans","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","effectsManager","EffectsManager","getType","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","SVGEffects","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","tSpan","usesGlyphs","cachedSpansLength","tElement","justify","time","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","fn","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","ef","filters","CVBaseElement","failed","CVMaskElement","hasMasks","stroke","fill","currentRender","sWidth","fValue","CVEffects","HBaseElement","shapesContainer","currentBBox","textPaths","isMasked","pe","_prevMat","HEffects","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","animationManager","registeredAnimations","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","addPlayingCount","activate","resume","nowTime","elapsedTime","advanceTime","first","params","setParams","setSpeed","setDirection","play","pause","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","getElementsByTagName","div","resize","goToAndStop","isFrame","freeze","unfreeze","getRegisteredAnimations","animations","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","rendererSettings","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","needsVelocity","_needsRandom","elemType","$bm_transform","effect","thisProperty","valueAtTime","frameDuration","displayStartTime","inPoint","outPoint","loopIn","loop_in","loopOut","loop_out","smooth","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","rotation","anchorPoint","thisLayer","thisComp","velocityAtTime","__expression_functions","scoped_bm_rt","xf","eval","expression_function","numKeys","active","wiggle","freq","amp","addedAmps","periods","loopInDuration","duration","loopOutDuration","getVelocityAtTime","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeIn","ease","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","seedrandom","randSeed","substring","hasParent","executeExpression","_value","frameExpressionId","expressionHelpers","searchExpressions","getSpeedAtTime","speed","_cachingAtTime","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","sampleFrequency","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","shapeValue","propertyGetShapeProp","trims","getExpressionValue","calculateExpression","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","interfaceFunction","interfaces","_name","mn","numProperties","cix","contentsInterfaceFactory","transformInterface","_propertyGroup","skewAxis","defineProperties","ExpressionPropertyInterface","transformInterfaceFactory","np","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_sourceText","_thisLayerFunction","stringValue","_prevValue","toWorldMat","sampleImage","anchorPointDescriptor","TransformExpressionInterface","anchor_point","startTime","source","MaskManagerInterface","effects","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","createGroupInterface","createValueInterface","groupInterface","enabled","en","expressionProperty","effectsData","MaskInterface","_mask","_data","_masksInterfaces","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","valueProp","assign","speedAtTime","defaultGetter","UnidimensionalPropertyInterface","arrValue","MultidimensionalPropertyInterface","TextExpressionSelectorProp","propertyGetTextProp","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","getValueProxy","total","eff","lottiejs","setLocationHref","setSubframeRendering","setQuality","isNaN","inBrowser","installPlugin","plugin","getFactory","checkReady","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","setInterval"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import bodymovin from 'lottie-web';\nimport logoAnimation from './data/data.json';\n\nbodymovin.loadAnimation({\n  container: document.getElementById('logo-animation-container'),\n  renderer: 'svg',\n  loop: false,\n  autoplay: true,\n  animationData: logoAnimation\n});\n","(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#FF0000';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\txhr.responseType = \"json\";\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('arial-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = (data.k[ind].s || data.k[ind].s === 0) ? data.k[ind-1].s : data.k[ind].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.1';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n"],"sourceRoot":""}